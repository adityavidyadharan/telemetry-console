name: Publish

on:
  push:
    branches:
      - main

jobs:
  python-build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - folder: linux
            os: ubuntu-latest
          - folder: win
            os: windows-latest
          - folder: mac
            os: macos-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Python Setup
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Pip Install
        run: |
          pip install -r python/requirements.txt --ignore-installed

      - name: Build Python Executable
        run: |
          python python/build.py ${{ matrix.folder }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.run_id }}-publish-python-build-${{ matrix.folder }}
          path: python/dist/${{ matrix.folder }}/import

  publish:
    needs: python-build

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v1

      - name: Install Node and NPM
        uses: actions/setup-node@v1
        with:
          node-version: 16
          cache: npm

      - name: Install and build
        run: |
          npm install
          npm run postinstall
          npm run build

      - name: Pull Artifacts | Windows
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.run_id }}-publish-python-build-win
          path: python/dist/win/

      - name: Pull Artifacts | Mac
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.run_id }}-publish-python-build-mac
          path: python/dist/mac

      - name: Pull Artifacts | Linux
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.run_id }}-publish-python-build-linux
          path: python/dist/linux

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --win --mac --linux
